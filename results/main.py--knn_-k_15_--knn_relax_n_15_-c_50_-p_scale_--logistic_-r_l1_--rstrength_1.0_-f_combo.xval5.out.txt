>> python main.py --seed_xval 1 --seed_pairs 1 --knn -k 15 --knn_relax_n 15 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 15.00 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.53 s
==> Logistic training accuracy: 59.37%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2931 | 0.2069 
  pos | 0.1994 | 0.3006 

====================
Generating pairwise dataset...
Completed in 11.27 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 11.94 s
==> Logistic test accuracy: 51.13%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5 | 0.4796 
  pos | 0.009125 | 0.01132 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=15 and euclidean metric
==> KNN training accuracy: 18.91%
==> KNN test accuracy: 3.82%
Checking KNN, relaxed to top 15 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 42.37%
>> python main.py --seed_xval 2 --seed_pairs 2 --knn -k 15 --knn_relax_n 15 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 15.08 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.72 s
==> Logistic training accuracy: 58.72%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2898 | 0.2102 
  pos | 0.2026 | 0.2974 

====================
Generating pairwise dataset...
Completed in 11.64 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 12.51 s
==> Logistic test accuracy: 52.60%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5151 | 0.4644 
  pos | 0.009505 | 0.01094 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=15 and euclidean metric
==> KNN training accuracy: 18.59%
==> KNN test accuracy: 5.34%
Checking KNN, relaxed to top 15 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 43.13%
>> python main.py --seed_xval 3 --seed_pairs 3 --knn -k 15 --knn_relax_n 15 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.98 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.57 s
==> Logistic training accuracy: 59.68%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2978 | 0.2022 
  pos | 0.2011 | 0.2989 

====================
Generating pairwise dataset...
Completed in 11.45 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 12.17 s
==> Logistic test accuracy: 50.69%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.496 | 0.4836 
  pos | 0.009476 | 0.01097 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=15 and euclidean metric
==> KNN training accuracy: 20.83%
==> KNN test accuracy: 3.82%
Checking KNN, relaxed to top 15 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 46.56%
>> python main.py --seed_xval 4 --seed_pairs 4 --knn -k 15 --knn_relax_n 15 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 15.13 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.44 s
==> Logistic training accuracy: 60.21%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2974 | 0.2026 
  pos | 0.1952 | 0.3048 

====================
Generating pairwise dataset...
Completed in 11.33 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 11.92 s
==> Logistic test accuracy: 52.17%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5105 | 0.469 
  pos | 0.00933 | 0.01111 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=15 and euclidean metric
==> KNN training accuracy: 19.07%
==> KNN test accuracy: 5.34%
Checking KNN, relaxed to top 15 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 46.56%
>> python main.py --seed_xval 5 --seed_pairs 5 --knn -k 15 --knn_relax_n 15 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 15.04 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.55 s
==> Logistic training accuracy: 59.69%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2981 | 0.2019 
  pos | 0.2012 | 0.2988 

====================
Generating pairwise dataset...
Completed in 11.50 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 12.20 s
==> Logistic test accuracy: 58.43%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.575 | 0.4046 
  pos | 0.01117 | 0.009271 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=15 and euclidean metric
==> KNN training accuracy: 19.87%
==> KNN test accuracy: 6.49%
Checking KNN, relaxed to top 15 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 43.89%
