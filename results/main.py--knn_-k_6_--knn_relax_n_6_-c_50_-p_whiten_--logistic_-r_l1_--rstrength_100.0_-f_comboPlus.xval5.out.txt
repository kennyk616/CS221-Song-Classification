>> python main.py --seed_xval 1 --seed_pairs 1 --knn -k 6 --knn_relax_n 6 -c 50 -p whiten --logistic -r l1 --rstrength 100.0 -f comboPlus
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 24.31 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.14 s
==> Logistic training accuracy: 57.48%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.275 | 0.225 
  pos | 0.2002 | 0.2998 

====================
Generating pairwise dataset...
Completed in 37.57 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 37.97 s
==> Logistic test accuracy: 54.55%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5337 | 0.4459 
  pos | 0.008628 | 0.01182 

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=6 and euclidean metric
==> KNN training accuracy: 26.28%
==> KNN test accuracy: 4.20%
Checking KNN, relaxed to top 6 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 21.37%
>> python main.py --seed_xval 2 --seed_pairs 2 --knn -k 6 --knn_relax_n 6 -c 50 -p whiten --logistic -r l1 --rstrength 100.0 -f comboPlus
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 24.16 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.16 s
==> Logistic training accuracy: 56.42%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.277 | 0.223 
  pos | 0.2128 | 0.2872 

====================
Generating pairwise dataset...
Completed in 38.24 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 38.74 s
==> Logistic test accuracy: 53.11%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5196 | 0.46 
  pos | 0.00895 | 0.01149 

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=6 and euclidean metric
==> KNN training accuracy: 29.01%
==> KNN test accuracy: 7.63%
Checking KNN, relaxed to top 6 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 22.14%
>> python main.py --seed_xval 3 --seed_pairs 3 --knn -k 6 --knn_relax_n 6 -c 50 -p whiten --logistic -r l1 --rstrength 100.0 -f comboPlus
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 24.63 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.17 s
==> Logistic training accuracy: 57.92%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2803 | 0.2197 
  pos | 0.2011 | 0.2989 

====================
Generating pairwise dataset...
Completed in 37.33 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 37.76 s
==> Logistic test accuracy: 55.44%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5432 | 0.4363 
  pos | 0.009301 | 0.01114 

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=6 and euclidean metric
==> KNN training accuracy: 26.44%
==> KNN test accuracy: 3.82%
Checking KNN, relaxed to top 6 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 20.61%
>> python main.py --seed_xval 4 --seed_pairs 4 --knn -k 6 --knn_relax_n 6 -c 50 -p whiten --logistic -r l1 --rstrength 100.0 -f comboPlus
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 24.34 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.11 s
==> Logistic training accuracy: 57.75%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2806 | 0.2194 
  pos | 0.2031 | 0.2969 

====================
Generating pairwise dataset...
Completed in 38.14 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 38.52 s
==> Logistic test accuracy: 57.48%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5641 | 0.4155 
  pos | 0.00971 | 0.01073 

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=6 and euclidean metric
==> KNN training accuracy: 24.68%
==> KNN test accuracy: 3.44%
Checking KNN, relaxed to top 6 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 19.47%
>> python main.py --seed_xval 5 --seed_pairs 5 --knn -k 6 --knn_relax_n 6 -c 50 -p whiten --logistic -r l1 --rstrength 100.0 -f comboPlus
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 24.72 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.14 s
==> Logistic training accuracy: 59.27%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2926 | 0.2074 
  pos | 0.2 | 0.3 

====================
Generating pairwise dataset...
Completed in 38.47 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 38.88 s
==> Logistic test accuracy: 54.09%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.53 | 0.4496 
  pos | 0.009476 | 0.01097 

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=6 and euclidean metric
==> KNN training accuracy: 29.49%
==> KNN test accuracy: 4.20%
Checking KNN, relaxed to top 6 membership
==> KNN relax training accuracy: 100.00%
==> KNN relax test accuracy: 20.99%
