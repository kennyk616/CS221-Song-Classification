>> python main.py --seed_xval 1 --seed_pairs 1 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.72 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 0.23 s
==> Logistic training accuracy: 59.21%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 22.61%
==> KNN test accuracy: 3.60%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 77.11%
==> KNN relax test accuracy: 13.19%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.64 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 0.21 s
==> Logistic training accuracy: 58.15%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 24.22%
==> KNN test accuracy: 2.88%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 77.96%
==> KNN relax test accuracy: 13.43%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.31 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 0.25 s
==> Logistic training accuracy: 60.25%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 20.53%
==> KNN test accuracy: 4.32%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 78.33%
==> KNN relax test accuracy: 13.67%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.66 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 0.25 s
==> Logistic training accuracy: 59.01%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 20.62%
==> KNN test accuracy: 1.44%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 78.24%
==> KNN relax test accuracy: 12.47%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.19 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 0.23 s
==> Logistic training accuracy: 58.81%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 22.61%
==> KNN test accuracy: 4.32%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 77.96%
==> KNN relax test accuracy: 14.39%
