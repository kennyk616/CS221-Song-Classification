>> python main.py --seed_xval 1 --seed_pairs 1 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 62.74 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 0.30 s
==> Logistic training accuracy: 58.65%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 20.40%
==> KNN test accuracy: 2.73%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 75.33%
==> KNN relax test accuracy: 11.36%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 63.61 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 0.42 s
==> Logistic training accuracy: 59.03%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 19.89%
==> KNN test accuracy: 3.33%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 75.33%
==> KNN relax test accuracy: 9.55%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 62.60 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 0.36 s
==> Logistic training accuracy: 59.86%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 19.83%
==> KNN test accuracy: 1.21%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 75.67%
==> KNN relax test accuracy: 8.79%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 62.72 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 0.33 s
==> Logistic training accuracy: 58.77%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 21.48%
==> KNN test accuracy: 2.27%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 75.67%
==> KNN relax test accuracy: 12.27%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 62.61 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 0.32 s
==> Logistic training accuracy: 58.97%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 20.00%
==> KNN test accuracy: 1.67%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 73.62%
==> KNN relax test accuracy: 8.03%
