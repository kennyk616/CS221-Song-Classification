>> python main.py --seed_xval 1 --seed_pairs 1 -c 50 -p whiten -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 14.25 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.12 s
==> Logistic training accuracy: 55.69%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 23.24%
==> KNN test accuracy: 3.44%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 78.69%
==> KNN relax test accuracy: 15.65%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 50 -p whiten -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 15.96 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.11 s
==> Logistic training accuracy: 55.61%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 24.20%
==> KNN test accuracy: 4.20%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.60%
==> KNN relax test accuracy: 16.41%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 50 -p whiten -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 14.46 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.13 s
==> Logistic training accuracy: 55.86%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 24.68%
==> KNN test accuracy: 3.82%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.61%
==> KNN relax test accuracy: 20.61%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 50 -p whiten -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 12.21 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.12 s
==> Logistic training accuracy: 55.98%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 22.28%
==> KNN test accuracy: 5.73%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.29%
==> KNN relax test accuracy: 14.89%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 50 -p whiten -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.PCAWhitener'>

====================
Generating pairwise dataset...
Completed in 12.16 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.09 s
==> Logistic training accuracy: 56.52%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 25.96%
==> KNN test accuracy: 1.53%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 75.48%
==> KNN relax test accuracy: 14.50%
