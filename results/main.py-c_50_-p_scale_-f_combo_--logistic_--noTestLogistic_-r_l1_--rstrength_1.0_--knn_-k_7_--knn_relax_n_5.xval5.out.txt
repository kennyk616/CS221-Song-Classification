>> python main.py --seed_xval 1 --seed_pairs 1 -c 50 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.34 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.53 s
==> Logistic training accuracy: 59.37%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 25.64%
==> KNN test accuracy: 3.44%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.13%
==> KNN relax test accuracy: 18.32%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 50 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.90 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.60 s
==> Logistic training accuracy: 58.72%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 23.08%
==> KNN test accuracy: 4.20%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 78.85%
==> KNN relax test accuracy: 18.70%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 50 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.86 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.58 s
==> Logistic training accuracy: 59.69%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 25.00%
==> KNN test accuracy: 4.20%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 79.97%
==> KNN relax test accuracy: 21.37%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 50 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 15.15 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.55 s
==> Logistic training accuracy: 60.21%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 24.52%
==> KNN test accuracy: 6.11%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 79.49%
==> KNN relax test accuracy: 19.47%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 50 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.63 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.53 s
==> Logistic training accuracy: 59.69%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 24.68%
==> KNN test accuracy: 6.87%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 79.01%
==> KNN relax test accuracy: 20.61%
