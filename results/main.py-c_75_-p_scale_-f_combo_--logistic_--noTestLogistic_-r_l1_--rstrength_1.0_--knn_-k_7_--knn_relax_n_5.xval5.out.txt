>> python main.py --seed_xval 1 --seed_pairs 1 -c 75 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  75 cliques found in 849 tracks.
Test set:  75 cliques found in 342 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 22.96 s
Preprocessing data...
Training logistic classifier on 10046 song pairs...
Train data dimensions: (10046, 243)
Completed in 0.68 s
==> Logistic training accuracy: 59.50%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 21.55%
==> KNN test accuracy: 4.68%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.09%
==> KNN relax test accuracy: 13.16%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 75 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  75 cliques found in 849 tracks.
Test set:  75 cliques found in 342 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 20.35 s
Preprocessing data...
Training logistic classifier on 10046 song pairs...
Train data dimensions: (10046, 243)
Completed in 0.48 s
==> Logistic training accuracy: 59.72%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 20.38%
==> KNN test accuracy: 4.09%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.09%
==> KNN relax test accuracy: 15.79%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 75 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  75 cliques found in 849 tracks.
Test set:  75 cliques found in 342 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 20.10 s
Preprocessing data...
Training logistic classifier on 10046 song pairs...
Train data dimensions: (10046, 243)
Completed in 0.45 s
==> Logistic training accuracy: 59.01%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 22.97%
==> KNN test accuracy: 2.05%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.80%
==> KNN relax test accuracy: 13.16%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 75 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  75 cliques found in 849 tracks.
Test set:  75 cliques found in 342 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 20.30 s
Preprocessing data...
Training logistic classifier on 10046 song pairs...
Train data dimensions: (10046, 243)
Completed in 0.69 s
==> Logistic training accuracy: 59.53%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 23.91%
==> KNN test accuracy: 4.09%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 77.39%
==> KNN relax test accuracy: 12.28%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 75 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  75 cliques found in 849 tracks.
Test set:  75 cliques found in 342 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 20.55 s
Preprocessing data...
Training logistic classifier on 10046 song pairs...
Train data dimensions: (10046, 243)
Completed in 0.67 s
==> Logistic training accuracy: 59.26%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 23.44%
==> KNN test accuracy: 3.51%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 77.39%
==> KNN relax test accuracy: 14.62%
