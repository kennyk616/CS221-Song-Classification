>> python main.py --seed_xval 1 --seed_pairs 1 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 70.71 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 1.49 s
==> Logistic training accuracy: 59.98%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 19.49%
==> KNN test accuracy: 1.97%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.64%
==> KNN relax test accuracy: 10.61%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 62.79 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 1.54 s
==> Logistic training accuracy: 60.35%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 17.89%
==> KNN test accuracy: 2.27%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.98%
==> KNN relax test accuracy: 8.18%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 62.25 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 1.57 s
==> Logistic training accuracy: 61.21%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 19.60%
==> KNN test accuracy: 2.27%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 75.50%
==> KNN relax test accuracy: 10.45%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 63.42 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 2.04 s
==> Logistic training accuracy: 60.12%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 20.00%
==> KNN test accuracy: 1.06%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.35%
==> KNN relax test accuracy: 8.48%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 200 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  200 cliques found in 1755 tracks.
Test set:  200 cliques found in 660 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 62.92 s
Preprocessing data...
Training logistic classifier on 15764 song pairs...
Train data dimensions: (15764, 287)
Completed in 1.72 s
==> Logistic training accuracy: 59.97%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 18.01%
==> KNN test accuracy: 1.21%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 76.64%
==> KNN relax test accuracy: 9.39%
