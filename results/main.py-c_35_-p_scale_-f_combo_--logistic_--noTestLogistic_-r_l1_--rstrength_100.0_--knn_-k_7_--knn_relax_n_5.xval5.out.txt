>> python main.py --seed_xval 1 --seed_pairs 1 -c 35 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  35 cliques found in 481 tracks.
Test set:  35 cliques found in 202 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 11.58 s
Preprocessing data...
Training logistic classifier on 7022 song pairs...
Train data dimensions: (7022, 243)
Completed in 0.10 s
==> Logistic training accuracy: 56.45%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 26.82%
==> KNN test accuracy: 5.45%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.87%
==> KNN relax test accuracy: 23.76%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 35 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  35 cliques found in 481 tracks.
Test set:  35 cliques found in 202 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 11.25 s
Preprocessing data...
Training logistic classifier on 7022 song pairs...
Train data dimensions: (7022, 243)
Completed in 0.15 s
==> Logistic training accuracy: 57.05%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 27.23%
==> KNN test accuracy: 5.94%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 82.54%
==> KNN relax test accuracy: 19.80%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 35 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  35 cliques found in 481 tracks.
Test set:  35 cliques found in 202 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 11.49 s
Preprocessing data...
Training logistic classifier on 7022 song pairs...
Train data dimensions: (7022, 243)
Completed in 0.10 s
==> Logistic training accuracy: 56.11%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 25.16%
==> KNN test accuracy: 4.95%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.67%
==> KNN relax test accuracy: 23.27%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 35 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  35 cliques found in 481 tracks.
Test set:  35 cliques found in 202 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 11.27 s
Preprocessing data...
Training logistic classifier on 7022 song pairs...
Train data dimensions: (7022, 243)
Completed in 0.09 s
==> Logistic training accuracy: 54.77%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 27.23%
==> KNN test accuracy: 8.42%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 83.16%
==> KNN relax test accuracy: 27.72%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 35 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  35 cliques found in 481 tracks.
Test set:  35 cliques found in 202 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 11.48 s
Preprocessing data...
Training logistic classifier on 7022 song pairs...
Train data dimensions: (7022, 243)
Completed in 0.11 s
==> Logistic training accuracy: 54.30%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 26.20%
==> KNN test accuracy: 4.46%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 82.54%
==> KNN relax test accuracy: 28.22%
