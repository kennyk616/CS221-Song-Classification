>> python main.py --seed_xval 1 --seed_pairs 1 -c 25 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  25 cliques found in 374 tracks.
Test set:  25 cliques found in 162 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 9.04 s
Preprocessing data...
Training logistic classifier on 5982 song pairs...
Train data dimensions: (5982, 243)
Completed in 0.09 s
==> Logistic training accuracy: 55.48%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 30.21%
==> KNN test accuracy: 10.49%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 85.56%
==> KNN relax test accuracy: 35.80%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 25 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  25 cliques found in 374 tracks.
Test set:  25 cliques found in 162 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 9.05 s
Preprocessing data...
Training logistic classifier on 5982 song pairs...
Train data dimensions: (5982, 243)
Completed in 0.08 s
==> Logistic training accuracy: 56.52%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 28.61%
==> KNN test accuracy: 7.41%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 82.35%
==> KNN relax test accuracy: 35.19%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 25 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  25 cliques found in 374 tracks.
Test set:  25 cliques found in 162 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 9.16 s
Preprocessing data...
Training logistic classifier on 5982 song pairs...
Train data dimensions: (5982, 243)
Completed in 0.08 s
==> Logistic training accuracy: 55.72%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 29.14%
==> KNN test accuracy: 9.88%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 83.96%
==> KNN relax test accuracy: 32.10%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 25 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  25 cliques found in 374 tracks.
Test set:  25 cliques found in 162 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 9.19 s
Preprocessing data...
Training logistic classifier on 5982 song pairs...
Train data dimensions: (5982, 243)
Completed in 0.08 s
==> Logistic training accuracy: 56.32%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 31.28%
==> KNN test accuracy: 8.02%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 83.96%
==> KNN relax test accuracy: 29.01%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 25 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  25 cliques found in 374 tracks.
Test set:  25 cliques found in 162 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 9.03 s
Preprocessing data...
Training logistic classifier on 5982 song pairs...
Train data dimensions: (5982, 243)
Completed in 0.08 s
==> Logistic training accuracy: 56.67%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 32.62%
==> KNN test accuracy: 9.26%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 82.89%
==> KNN relax test accuracy: 30.86%
