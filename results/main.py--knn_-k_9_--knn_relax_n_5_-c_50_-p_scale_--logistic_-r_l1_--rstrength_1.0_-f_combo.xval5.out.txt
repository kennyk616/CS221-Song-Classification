>> python main.py --seed_xval 1 --seed_pairs 1 --knn -k 9 --knn_relax_n 5 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.61 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.46 s
==> Logistic training accuracy: 59.36%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.293 | 0.207 
  pos | 0.1994 | 0.3006 

====================
Generating pairwise dataset...
Completed in 11.23 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 11.84 s
==> Logistic test accuracy: 51.13%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5 | 0.4796 
  pos | 0.009125 | 0.01132 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=9 and euclidean metric
==> KNN training accuracy: 24.84%
==> KNN test accuracy: 3.05%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 66.99%
==> KNN relax test accuracy: 16.79%
>> python main.py --seed_xval 2 --seed_pairs 2 --knn -k 9 --knn_relax_n 5 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.98 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.38 s
==> Logistic training accuracy: 58.73%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2898 | 0.2102 
  pos | 0.2025 | 0.2975 

====================
Generating pairwise dataset...
Completed in 10.95 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 11.49 s
==> Logistic test accuracy: 52.60%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.515 | 0.4645 
  pos | 0.009505 | 0.01094 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=9 and euclidean metric
==> KNN training accuracy: 21.63%
==> KNN test accuracy: 4.58%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 64.58%
==> KNN relax test accuracy: 17.56%
>> python main.py --seed_xval 3 --seed_pairs 3 --knn -k 9 --knn_relax_n 5 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.75 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.58 s
==> Logistic training accuracy: 59.68%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2978 | 0.2022 
  pos | 0.2011 | 0.2989 

====================
Generating pairwise dataset...
Completed in 11.37 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 12.09 s
==> Logistic test accuracy: 50.69%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.4959 | 0.4836 
  pos | 0.009476 | 0.01097 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=9 and euclidean metric
==> KNN training accuracy: 25.00%
==> KNN test accuracy: 3.82%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 67.95%
==> KNN relax test accuracy: 21.37%
>> python main.py --seed_xval 4 --seed_pairs 4 --knn -k 9 --knn_relax_n 5 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.88 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.61 s
==> Logistic training accuracy: 60.21%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2974 | 0.2026 
  pos | 0.1952 | 0.3048 

====================
Generating pairwise dataset...
Completed in 11.31 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 12.07 s
==> Logistic test accuracy: 52.17%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.5106 | 0.469 
  pos | 0.00933 | 0.01111 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=9 and euclidean metric
==> KNN training accuracy: 22.60%
==> KNN test accuracy: 6.11%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 66.03%
==> KNN relax test accuracy: 22.14%
>> python main.py --seed_xval 5 --seed_pairs 5 --knn -k 9 --knn_relax_n 5 -c 50 -p scale --logistic -r l1 --rstrength 1.0 -f combo
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 14.76 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 243)
Completed in 0.58 s
==> Logistic training accuracy: 59.69%
Logistic: TRAIN set
Confusion Matrix:
        neg    | pos
  neg | 0.2981 | 0.2019 
  pos | 0.2012 | 0.2988 

====================
Generating pairwise dataset...
Completed in 11.29 s
Preprocessing data...
Testing logistic classifier on 34191 song pairs...
Completed in 12.01 s
==> Logistic test accuracy: 58.43%
Logistic: TEST set
Confusion Matrix:
        neg    | pos
  neg | 0.575 | 0.4045 
  pos | 0.01117 | 0.009271 

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=9 and euclidean metric
==> KNN training accuracy: 21.47%
==> KNN test accuracy: 7.25%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 65.22%
==> KNN relax test accuracy: 19.47%
