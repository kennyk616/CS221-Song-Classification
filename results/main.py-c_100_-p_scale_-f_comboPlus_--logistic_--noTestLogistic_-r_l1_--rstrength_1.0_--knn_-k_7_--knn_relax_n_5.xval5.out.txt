>> python main.py --seed_xval 1 --seed_pairs 1 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 44.14 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 1.29 s
==> Logistic training accuracy: 60.86%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 21.95%
==> KNN test accuracy: 3.84%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 78.43%
==> KNN relax test accuracy: 17.51%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.01 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 1.35 s
==> Logistic training accuracy: 61.06%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 20.34%
==> KNN test accuracy: 2.88%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 78.33%
==> KNN relax test accuracy: 17.03%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.91 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 1.36 s
==> Logistic training accuracy: 61.48%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 22.23%
==> KNN test accuracy: 2.64%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.79%
==> KNN relax test accuracy: 12.71%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.43 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 1.39 s
==> Logistic training accuracy: 61.51%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 22.14%
==> KNN test accuracy: 2.88%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.61%
==> KNN relax test accuracy: 13.91%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 100 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 1.0 --knn -k 7 --knn_relax_n 5
Training set:  100 cliques found in 1057 tracks.
Test set:  100 cliques found in 417 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 39.22 s
Preprocessing data...
Training logistic classifier on 11574 song pairs...
Train data dimensions: (11574, 287)
Completed in 1.16 s
==> Logistic training accuracy: 61.05%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 24.41%
==> KNN test accuracy: 4.32%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 79.47%
==> KNN relax test accuracy: 17.99%
