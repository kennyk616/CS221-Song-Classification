>> python main.py --seed_xval 1 --seed_pairs 1 -c 50 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 24.74 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.15 s
==> Logistic training accuracy: 57.94%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 25.32%
==> KNN test accuracy: 5.73%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 83.49%
==> KNN relax test accuracy: 22.14%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 50 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 24.26 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.14 s
==> Logistic training accuracy: 57.20%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 26.60%
==> KNN test accuracy: 6.87%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 81.41%
==> KNN relax test accuracy: 23.66%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 50 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 24.25 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.18 s
==> Logistic training accuracy: 58.51%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 23.40%
==> KNN test accuracy: 4.96%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 81.41%
==> KNN relax test accuracy: 26.34%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 50 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 24.45 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.17 s
==> Logistic training accuracy: 58.62%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 26.44%
==> KNN test accuracy: 4.96%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 80.13%
==> KNN relax test accuracy: 22.90%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 50 -p scale -f comboPlus --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  50 cliques found in 624 tracks.
Test set:  50 cliques found in 262 tracks.
-- using comboPlus features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 24.22 s
Preprocessing data...
Training logistic classifier on 8246 song pairs...
Train data dimensions: (8246, 287)
Completed in 0.16 s
==> Logistic training accuracy: 58.39%

==> Weight vector (feature) dimension: 287
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 25.00%
==> KNN test accuracy: 6.87%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 82.37%
==> KNN relax test accuracy: 23.28%
