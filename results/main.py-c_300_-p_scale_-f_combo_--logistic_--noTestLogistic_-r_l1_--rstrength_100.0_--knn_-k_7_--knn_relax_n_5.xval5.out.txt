>> python main.py --seed_xval 1 --seed_pairs 1 -c 300 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  300 cliques found in 2328 tracks.
Test set:  300 cliques found in 860 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 61.38 s
Preprocessing data...
Training logistic classifier on 18494 song pairs...
Train data dimensions: (18494, 243)
Completed in 0.30 s
==> Logistic training accuracy: 57.58%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 16.84%
==> KNN test accuracy: 0.70%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 74.57%
==> KNN relax test accuracy: 6.51%
>> python main.py --seed_xval 2 --seed_pairs 2 -c 300 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  300 cliques found in 2328 tracks.
Test set:  300 cliques found in 860 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 55.04 s
Preprocessing data...
Training logistic classifier on 18494 song pairs...
Train data dimensions: (18494, 243)
Completed in 0.33 s
==> Logistic training accuracy: 58.31%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 16.80%
==> KNN test accuracy: 0.93%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 74.66%
==> KNN relax test accuracy: 4.88%
>> python main.py --seed_xval 3 --seed_pairs 3 -c 300 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  300 cliques found in 2328 tracks.
Test set:  300 cliques found in 860 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 54.25 s
Preprocessing data...
Training logistic classifier on 18494 song pairs...
Train data dimensions: (18494, 243)
Completed in 0.33 s
==> Logistic training accuracy: 57.68%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 18.13%
==> KNN test accuracy: 1.28%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 72.81%
==> KNN relax test accuracy: 4.42%
>> python main.py --seed_xval 4 --seed_pairs 4 -c 300 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  300 cliques found in 2328 tracks.
Test set:  300 cliques found in 860 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 54.67 s
Preprocessing data...
Training logistic classifier on 18494 song pairs...
Train data dimensions: (18494, 243)
Completed in 0.28 s
==> Logistic training accuracy: 57.53%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 17.35%
==> KNN test accuracy: 1.28%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 73.54%
==> KNN relax test accuracy: 5.35%
>> python main.py --seed_xval 5 --seed_pairs 5 -c 300 -p scale -f combo --logistic --noTestLogistic -r l1 --rstrength 100.0 --knn -k 7 --knn_relax_n 5
Training set:  300 cliques found in 2328 tracks.
Test set:  300 cliques found in 860 tracks.
-- using combo features --
Data preprocessor: <class 'transform.StandardScaler'>

====================
Generating pairwise dataset...
Completed in 54.68 s
Preprocessing data...
Training logistic classifier on 18494 song pairs...
Train data dimensions: (18494, 243)
Completed in 0.36 s
==> Logistic training accuracy: 57.46%

==> Weight vector (feature) dimension: 243
KNN: using 'euclidean' metric with params []
Running KNN with k=7 and euclidean metric
==> KNN training accuracy: 18.43%
==> KNN test accuracy: 1.28%
Checking KNN, relaxed to top 5 membership
==> KNN relax training accuracy: 74.57%
==> KNN relax test accuracy: 4.65%
